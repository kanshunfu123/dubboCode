<!DOCTYPE table SYSTEM "../config/table-config-1.0.dtd">
<table sqlname="sys_area" physicalName="sys_area" remark="区域 省市县三级联动">
    <!--  特殊字符说明 &lt;&gt; <> -->
    <!-- baseSql option中 select * 会自动替换为 include -->
    <sql id="Base_Column_List">
        ID,SYS_AREA_PARENT_ID,DEL_FLAG,CREATE_BY,UPDATE_BY
        ,SYS_AREA_NAME,SYS_AREA_UUID,SYS_AREA_LEVEL,SYS_AREA_REMARK,CREATE_TIME
        ,UPDATE_TIME
    </sql>

    <!-- baseSql option中 select sf.* 会自动替换为 include -->
    <sql id="Base_SF_Column_List">
        sf.ID,sf.SYS_AREA_PARENT_ID,sf.DEL_FLAG,sf.CREATE_BY,sf.UPDATE_BY
        ,sf.SYS_AREA_NAME,sf.SYS_AREA_UUID,sf.SYS_AREA_LEVEL,sf.SYS_AREA_REMARK,sf.CREATE_TIME
        ,sf.UPDATE_TIME
    </sql>

    <operation name="insert" paramtype="object" remark="插入表:sys_area">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        <![CDATA[
        INSERT INTO sys_area(
            ID
            ,SYS_AREA_PARENT_ID
            ,DEL_FLAG
            ,CREATE_BY
            ,UPDATE_BY
            ,SYS_AREA_NAME
            ,SYS_AREA_UUID
            ,SYS_AREA_LEVEL
            ,SYS_AREA_REMARK
            ,CREATE_TIME
            ,UPDATE_TIME
        )VALUES(
             null
            , #{sysAreaParentId,jdbcType=BIGINT}
            , #{delFlag,jdbcType=CHAR}
            , #{createBy,jdbcType=VARCHAR}
            , #{updateBy,jdbcType=VARCHAR}
            , #{sysAreaName,jdbcType=VARCHAR}
            , #{sysAreaUuid,jdbcType=VARCHAR}
            , #{sysAreaLevel,jdbcType=VARCHAR}
            , #{sysAreaRemark,jdbcType=VARCHAR}
            , #{createTime,jdbcType=TIMESTAMP}
            , #{updateTime,jdbcType=TIMESTAMP}
        )
        ]]>
    </operation>

    <!-- foreach 可以自定义类型，paramtype="primitive" foreach->javatype="自己书写的类"  -->
    <!-- 只有一个参数且为List时必须将参数命名为list -->
    <operation name="insertBatch" paramtype="objectList" remark="批量插入表:sys_area">
        INSERT INTO sys_area(
        ID
        ,SYS_AREA_PARENT_ID
        ,DEL_FLAG
        ,CREATE_BY
        ,UPDATE_BY
        ,SYS_AREA_NAME
        ,SYS_AREA_UUID
        ,SYS_AREA_LEVEL
        ,SYS_AREA_REMARK
        ,CREATE_TIME
        ,UPDATE_TIME
        )VALUES
        <foreach collection="list" item="item" separator=",">
            (
            null
            , #{item.sysAreaParentId,jdbcType=BIGINT}
            , #{item.delFlag,jdbcType=CHAR}
            , #{item.createBy,jdbcType=VARCHAR}
            , #{item.updateBy,jdbcType=VARCHAR}
            , #{item.sysAreaName,jdbcType=VARCHAR}
            , #{item.sysAreaUuid,jdbcType=VARCHAR}
            , #{item.sysAreaLevel,jdbcType=VARCHAR}
            , #{item.sysAreaRemark,jdbcType=VARCHAR}
            , #{item.createTime,jdbcType=TIMESTAMP}
            , #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </operation>

    <!-- 不推荐使用全 update 有需要自己打开
    <operation name="update" paramtype="object" remark="更新表:sys_area">
        <![CDATA[
        UPDATE sys_area
        SET
            SYS_AREA_PARENT_ID = #{sysAreaParentId,jdbcType=BIGINT}
            ,DEL_FLAG        = #{delFlag,jdbcType=CHAR}
            ,CREATE_BY       = #{createBy,jdbcType=VARCHAR}
            ,UPDATE_BY       = #{updateBy,jdbcType=VARCHAR}
            ,SYS_AREA_NAME   = #{sysAreaName,jdbcType=VARCHAR}
            ,SYS_AREA_UUID   = #{sysAreaUuid,jdbcType=VARCHAR}
            ,SYS_AREA_LEVEL  = #{sysAreaLevel,jdbcType=VARCHAR}
            ,SYS_AREA_REMARK = #{sysAreaRemark,jdbcType=VARCHAR}
            ,CREATE_TIME     = #{createTime,jdbcType=TIMESTAMP}
            ,UPDATE_TIME     = #{updateTime,jdbcType=TIMESTAMP}
        WHERE
            ID              = #{id,jdbcType=BIGINT}
        ]]>
    </operation>
    -->
    <operation name="deleteById" remark="根据主键删除数据:sys_area">
        <![CDATA[
        DELETE FROM sys_area
        WHERE
            ID = #{id,jdbcType=BIGINT}
        ]]>
    </operation>

    <operation name="getById" multiplicity="one" remark="根据主键获取数据:sys_area">
        SELECT *
        FROM sys_area
        WHERE
        <![CDATA[
            ID = #{id,jdbcType=BIGINT}
        ]]>
    </operation>
    <operation name="getByUuid" multiplicity="one" remark="根据UUID获取数据:sys_area">
        SELECT
        ID,SYS_AREA_PARENT_ID,DEL_FLAG,CREATE_BY,UPDATE_BY
        ,SYS_AREA_NAME,SYS_AREA_UUID,SYS_AREA_LEVEL,SYS_AREA_REMARK,sys_area_code_num
        FROM sys_area
        WHERE
        SYS_AREA_UUID = #{sysAreaUuid,jdbcType=VARCHAR} and del_flag=0

    </operation>
    <operation name="getByIdId" multiplicity="one" remark="根据id获取数据:sys_area">
        SELECT
        ID,SYS_AREA_PARENT_ID,DEL_FLAG,CREATE_BY,UPDATE_BY
        ,SYS_AREA_NAME,SYS_AREA_UUID,SYS_AREA_LEVEL,SYS_AREA_REMARK,sys_area_code_num
        FROM sys_area
        WHERE
        ID = #{id,jdbcType=BIGINT} and del_flag=0
    </operation>
    <operation name="getByUuidList" multiplicity="many" paramtype="objectList" remark="根据UUID获取数据:sys_area">
        SELECT *
        FROM sys_area
        WHERE
        sys_area_uuid IN
        <foreach collection="list" item="uuid" open="(" close=")" separator=",">
            #{uuid.sysAreaUuid,jdbcType=VARCHAR}
        </foreach>
    </operation>
<operation name="getareaListByParentId" multiplicity="many" paramtype="object" remark="根据父级id查看子区域">
    select
    ID,SYS_AREA_PARENT_ID
    ,SYS_AREA_NAME,SYS_AREA_UUID,sys_area_code_num
    from sys_area
    <trim prefix="where" prefixOverrides="and">
            <if test="delFlag!=null and delFlag.trim()!=''">
              and  del_flag=#{delFlag,jdbcType=CHAR}
            </if>
        <if test="sysAreaParentId!=null">
            and  sys_area_parent_id=#{sysAreaParentId,jdbcType=BIGINT}
        </if>
    </trim>
</operation>
    <operation name="areaInfo" multiplicity="one" remark="根据用户id查询区域信息，由里往外查询">
        SELECT
        ID,SYS_AREA_NAME,SYS_AREA_UUID,SYS_AREA_LEVEL,sys_area_seq,sys_area_parent_id
        FROM sys_area WHERE id=#{areaId,jdbcType=BIGINT} AND DEL_FLAG=0
    </operation>
    <operation name="areaTree" multiplicity="many" remark="区域树">
        select
        ID
        ,sys_area_seq
        ,sys_area_parent_id
        ,SYS_AREA_NAME
        ,SYS_AREA_UUID
        ,SYS_AREA_LEVEL
        ,SYS_AREA_REMARK
        ,sys_area_code_num
        FROM sys_area
        where DEL_FLAG=0
    </operation>
    <operation name="areaListByareAIds" multiplicity="many" paramtype="objectList" remark="根据区域id列表查询区域信息">
        SELECT
        ID,SYS_AREA_NAME,SYS_AREA_UUID,SYS_AREA_LEVEL,sys_area_seq,sys_area_parent_id,sys_area_code_num
        FROM sys_area WHERE id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item.id,jdbcType=BIGINT}
        </foreach>
        AND DEL_FLAG=0
    </operation>
    <operation name="insertSysArea" paramtype="object" remark="添加表:sys_area">

        insert into sys_area
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="sysAreaUuid != null">
                sys_area_uuid,
            </if>
            <if test="sysAreaName != null">
                sys_area_name,
            </if>
            <if test="sysAreaLevel != null">
                sys_area_level,
            </if>
            <if test="sysAreaParentId != null">
                sys_area_parent_id,
            </if>
            <if test="sysAreaRemark != null">
                sys_area_remark,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="sysAreaCodeNum != null">
                sys_area_code_num,
            </if>
            <if test="sysAreaSeq != null">
                sys_area_seq,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="sysAreaUuid != null">
                #{sysAreaUuid,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaName != null">
                #{sysAreaName,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaLevel != null">
                #{sysAreaLevel,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaParentId != null">
                #{sysAreaParentId,jdbcType=BIGINT},
            </if>
            <if test="sysAreaRemark != null">
                #{sysAreaRemark,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaCodeNum != null">
                #{sysAreaCodeNum,jdbcType=BIGINT},
            </if>
            <if test="sysAreaSeq != null">
                #{sysAreaSeq,jdbcType=INTEGER},
            </if>
        </trim>
    </operation>
    <operation name="updateSysArea" paramtype="object" remark="编辑字典信息">
        update sys_area
        <set>
            <if test="sysAreaUuid != null">
                sys_area_uuid = #{sysAreaUuid,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaName != null">
                sys_area_name = #{sysAreaName,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaLevel != null">
                sys_area_level = #{sysAreaLevel,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaParentId != null">
                sys_area_parent_id = #{sysAreaParentId,jdbcType=BIGINT},
            </if>
            <if test="sysAreaRemark != null">
                sys_area_remark = #{sysAreaRemark,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="sysAreaCodeNum != null">
                sys_area_code_num = #{sysAreaCodeNum,jdbcType=BIGINT},
            </if>
            <if test="sysAreaSeq != null">
                sys_area_seq =#{sysAreaSeq,jdbcType=INTEGER},
            </if>
        </set>
        where sys_area_uuid = #{sysAreaUuid,jdbcType=VARCHAR}
    </operation>

    <operation name="getSysAreaNameNameAndBySysAreaParentId" multiplicity="one" resulttype="int" remark="同一层级下，区域名称是否相同">
        SELECT COUNT(id)
        FROM sys_area
        <trim prefix="WHERE" prefixOverrides="AND || OR">
            <if test="sysAreaName!=null">
                AND sys_area_name=#{sysAreaName,jdbcType=VARCHAR}
            </if>
            <if test="sysAreaParentId!=null">
                AND sys_area_parent_id=#{sysAreaParentId,jdbcType=BIGINT}
            </if>
            <if test="sysAreaUuid!=null">
                AND sys_area_uuid!=#{sysAreaUuid,jdbcType=VARCHAR}
            </if>
            AND del_flag=0
        </trim>
    </operation>
    <operation name="updatebatchUpdateLevel" paramtype="objectList" remark="区域更新之后，进行批量子级区域">
        <foreach collection="list" item="sysArea" separator=";">
            UPDATE sys_area
            SET
            SYS_AREA_LEVEL = #{sysArea.sysAreaLevel,jdbcType=VARCHAR}
            ,CREATE_BY = #{sysArea.createBy,jdbcType=VARCHAR}
            ,UPDATE_BY = #{sysArea.updateBy,jdbcType=VARCHAR}
            ,CREATE_TIME = #{sysArea.createTime,jdbcType=TIMESTAMP}
            ,UPDATE_TIME = #{sysArea.updateTime,jdbcType=TIMESTAMP}
            WHERE id = #{sysArea.id,jdbcType=BIGINT}
        </foreach>
    </operation>
    <operation name="getChildAreaListByLevel" multiplicity="many" remark="查询子区域">
        SELECT * FROM sys_area
        WHERE sys_area_level LIKE CONCAT( #{level,jdbcType=VARCHAR},  '%') AND del_flag=0
    </operation>
    <operation name="getAreaSysAreaCodeNum" multiplicity="one" paramtype="object" resulttype="Integer"
               remark="根据 区域字段值 全局唯一">
        SELECT count(id) FROM sys_area
        <trim prefix="WHERE" prefixOverrides="AND || OR">
            <!--<if test="id!=null">-->
            <!--id=#{id,parentId,jdbcType=BIGINT}-->
            <!--</if>-->
            <if test="sysAreaCodeNum!=null">
                sys_area_code_num=#{sysAreaCodeNum,jdbcType=BIGINT}
            </if>
            <!--<if test="uuid!=null">-->
                <!--sys_area_uuid=#{uuid,jdbcType=VARCHAR}-->
            <!--</if>-->
        </trim>
    </operation>

    <operation name="getLevelByParentId" multiplicity="one" remark="根据 父级id 获取数据:sys_area">
        SELECT  ID
        ,SYS_AREA_PARENT_ID
        ,DEL_FLAG
        ,CREATE_BY
        ,UPDATE_BY
        ,SYS_AREA_NAME
        ,SYS_AREA_UUID
        ,SYS_AREA_LEVEL
        ,SYS_AREA_REMARK
        ,CREATE_TIME
        ,UPDATE_TIME
        ,sys_area_code_num
        ,sys_area_seq
        FROM sys_area
        WHERE
        sys_area_code_num=#{sysAreaCodeNum,jdbcType=BIGINT}
    </operation>

</table>
