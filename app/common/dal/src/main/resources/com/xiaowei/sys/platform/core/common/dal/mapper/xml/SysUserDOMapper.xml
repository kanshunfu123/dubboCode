<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaowei.sys.platform.core.common.dal.mapper.SysUserDOMapper">
    <!-- 自动生成,请修改 SYS_USER.xml -->
    <resultMap id="BaseResultMap"  type="com.xiaowei.sys.platform.core.common.dal.dataobject.SysUserDO">
        <id column="ID" property="id" jdbcType="BIGINT" javaType="Long"/>
        <result column="AREA_ID" property="areaId" jdbcType="BIGINT" javaType="Long"/>
        <result column="DEPT_ID" property="deptId" jdbcType="BIGINT" javaType="Long"/>
        <result column="DEL_FLAG" property="delFlag" jdbcType="CHAR" javaType="String"/>
        <result column="NAME_TOP" property="nameTop" jdbcType="VARCHAR" javaType="String"/>
        <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" javaType="String"/>
        <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" javaType="String"/>
        <result column="NAME_BOTTOM" property="nameBottom" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_USER_PWD" property="sysUserPwd" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_USER_NAME" property="sysUserName" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_USER_UUID" property="sysUserUuid" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_USER_EMAIL" property="sysUserEmail" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_USER_PHONE" property="sysUserPhone" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_USER_AUTH_SALT" property="sysUserAuthSalt" jdbcType="VARCHAR" javaType="String"/>
        <result column="IS_THIRD" property="isThird" jdbcType="INTEGER" javaType="Integer"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
    </resultMap>

    <resultMap id="userRolesArea"  type="com.xiaowei.sys.platform.core.common.dal.resultmap.userRoleSArea" >
        <result column="uId" property="uid"  javaType="long"/>
        <result column="area_id" property="areaId"  javaType="long"/>
        <result column="dept_id" property="deptId"  javaType="long"/>
        <result column="sys_dept_name" property="sysDeptName"  javaType="String"/>
        <result column="sys_dept_uuid" property="sysDeptUuid"  javaType="String"/>
        <result column="sys_user_name" property="sysUserName"  javaType="String"/>
        <result column="sys_user_uuid" property="sysUserUuid"  javaType="String"/>
        <result column="sys_user_email" property="sysUserEmail"  javaType="String"/>
        <result column="sys_user_phone" property="sysUserPhone"  javaType="String"/>
    </resultMap>

    <sql id="Base_Column_List">
        ID,AREA_ID,DEPT_ID,DEL_FLAG,NAME_TOP,CREATE_BY,UPDATE_BY,NAME_BOTTOM,SYS_USER_PWD,SYS_USER_NAME,SYS_USER_UUID,SYS_USER_EMAIL,SYS_USER_PHONE,SYS_USER_AUTH_SALT,IS_THIRD,CREATE_TIME,UPDATE_TIME
    </sql>

    <sql id="Base_SF_Column_List">
        sf.ID,sf.AREA_ID,sf.DEPT_ID,sf.DEL_FLAG,sf.NAME_TOP,sf.CREATE_BY,sf.UPDATE_BY,sf.NAME_BOTTOM,sf.SYS_USER_PWD,sf.SYS_USER_NAME,sf.SYS_USER_UUID,sf.SYS_USER_EMAIL,sf.SYS_USER_PHONE,sf.SYS_USER_AUTH_SALT,sf.IS_THIRD,sf.CREATE_TIME,sf.UPDATE_TIME
    </sql>


    <!--插入表:SYS_USER-->
    <insert id="insert" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO SYS_USER(
        AREAID
        ,DEPTID
        ,ROLEID
        ,DEL_FLAG
        ,CREATE_BY
        ,UPDATE_BY
        ,SYS_USER_PWD
        ,SYS_USER_NAME
        ,SYS_USER_EMAIL
        ,SYS_USER_PHONE
        ,SYS_USER_AUTH_SALT
        ,CREATE_TIME
        ,UPDATE_TIME
        )VALUES(
        #{areaid,jdbcType=BIGINT}
        ,#{deptid,jdbcType=BIGINT}
        ,#{roleid,jdbcType=BIGINT}
        ,#{delFlag,jdbcType=CHAR}
        ,#{createBy,jdbcType=VARCHAR}
        ,#{updateBy,jdbcType=VARCHAR}
        ,#{sysUserPwd,jdbcType=VARCHAR}
        ,#{sysUserName,jdbcType=VARCHAR}
        ,#{sysUserEmail,jdbcType=VARCHAR}
        ,#{sysUserPhone,jdbcType=VARCHAR}
        ,#{sysUserAuthSalt,jdbcType=VARCHAR}
        ,#{createTime,jdbcType=TIMESTAMP}
        ,#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <!--更新表:SYS_USER-->
    <update id="update" >
        UPDATE /*MS-SYS-USER-UPDATE*/ SYS_USER
        SET
        AREAID = #{areaid,jdbcType=BIGINT}
        ,DEPTID = #{deptid,jdbcType=BIGINT}
        ,ROLEID = #{roleid,jdbcType=BIGINT}
        ,DEL_FLAG = #{delFlag,jdbcType=CHAR}
        ,CREATE_BY = #{createBy,jdbcType=VARCHAR}
        ,UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
        ,SYS_USER_PWD = #{sysUserPwd,jdbcType=VARCHAR}
        ,SYS_USER_NAME = #{sysUserName,jdbcType=VARCHAR}
        ,SYS_USER_EMAIL = #{sysUserEmail,jdbcType=VARCHAR}
        ,SYS_USER_PHONE = #{sysUserPhone,jdbcType=VARCHAR}
        ,SYS_USER_AUTH_SALT = #{sysUserAuthSalt,jdbcType=VARCHAR}
        ,CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
        ,UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
        WHERE
        ID = #{id,jdbcType=BIGINT}
    </update>

    <!--根据主键删除数据:SYS_USER-->
    <delete id="deleteById" >
        DELETE /*MS-SYS-USER-DELETEBYID*/ FROM SYS_USER
        WHERE
        ID = #{id,jdbcType=BIGINT}
    </delete>

    <!--根据主键获取数据:SYS_USER-->
    <select id="getById" resultMap="BaseResultMap">
        SELECT /*MS-SYS-USER-GETBYID*/  <include refid="Base_Column_List" /> FROM SYS_USER
        WHERE
        ID = #{id,jdbcType=BIGINT}
    </select>

    <!--根据主键获取数据:SYS_USER-->
    <select id="getByUuid" resultMap="BaseResultMap">
        SELECT /*MS-SYS-USER-GETBYUUID*/  <include refid="Base_Column_List" /> FROM sys_user
        WHERE
        sys_user_uuid = #{sysUserUuid,jdbcType=BIGINT} AND del_flag=0
    </select>

    <!--根据手机号/邮箱登录-->
    <select id="loginByUsername" resultMap="BaseResultMap">
        SELECT /*MS-SYS-USER-LOGINBYUSERNAME*/  <include refid="Base_Column_List" /> FROM sys_user
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="sysUserPhone!=null and sysUserPhone.trim()!=''">
                AND sys_user_phone=#{sysUserPhone,jdbcType=VARCHAR}
            </if>
            <if test="sysUserEmail!=null and sysUserEmail.trim()!=''">
                AND sys_user_email=#{sysUserEmail,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <!--根据部门id查询该部门是否有用户-->
    <select id="userCountByDeptId" resultType="int">
        SELECT /*MS-SYS-USER-USERCOUNTBYDEPTID*/  COUNT(id) FROM sys_user WHERE dept_id=#{deptId,jdbcType=BIGINT} AND del_flag=0
    </select>

    <!--多条件查询用户信息，部门、携带部门、角色、区域 pageCount-->
    <select id="userPagingCount"  resultType="int">
        SELECT
          COUNT(*) AS total 
        FROM
 sys_user u
        LEFT JOIN sys_dept de ON u.dept_id=de.id AND de.del_flag=#{deDelFlag,jdbcType=VARCHAR}
        <trim prefix="WHERE" prefixOverrides="AND || OR">
            <if test="uDelFlag!=null">
                AND u.del_flag=#{uDelFlag,jdbcType=VARCHAR}
            </if>
            <if test="sysDeptName!=null and sysDeptName.trim()!=''">
                AND sys_dept_name LIKE CONCAT('%',#{sysDeptName,jdbcType=VARCHAR},'%')
            </if>
            <if test="sysUserName!=null and sysUserName.trim()!=''">
                AND sys_user_name LIKE CONCAT('%',#{sysUserName,jdbcType=VARCHAR},'%')
            </if>
            <if test="sysUserUuid!=null and sysUserUuid.trim()!=''">
                AND sys_user_uuid =#{sysUserUuid,jdbcType=VARCHAR}
            </if>
        </trim>
        
    </select>
    <!--多条件查询用户信息，部门、携带部门、角色、区域 pageResult-->
    <select id="userPagingResult"  resultMap="userRolesArea">
        SELECT /*MS-SYS-USER-USERPAGING*/   u.id uId,sys_user_name, sys_user_uuid, dept_id, sys_user_phone,
        sys_user_email, area_id,de.sys_dept_name,de.sys_dept_uuid FROM sys_user u
        LEFT JOIN sys_dept de ON u.dept_id=de.id AND de.del_flag=#{deDelFlag,jdbcType=VARCHAR}
        <trim prefix="WHERE" prefixOverrides="AND || OR">
            <if test="uDelFlag!=null">
                AND u.del_flag=#{uDelFlag,jdbcType=VARCHAR}
            </if>
            <if test="sysDeptName!=null and sysDeptName.trim()!=''">
                AND sys_dept_name LIKE CONCAT('%',#{sysDeptName,jdbcType=VARCHAR},'%')
            </if>
            <if test="sysUserName!=null and sysUserName.trim()!=''">
                AND sys_user_name LIKE CONCAT('%',#{sysUserName,jdbcType=VARCHAR},'%')
            </if>
            <if test="sysUserUuid!=null and sysUserUuid.trim()!=''">
                AND sys_user_uuid =#{sysUserUuid,jdbcType=VARCHAR}
            </if>
        </trim>
        ORDER BY u.create_time DESC
        limit #{startRow},#{limit}
    </select>

    <!--根据用户uuid查看 用户信息-->
    <select id="getUserInfiByUuid" resultMap="userRolesArea">
        SELECT /*MS-SYS-USER-GETUSERINFIBYUUID*/   u.id uId,sys_user_name, sys_user_uuid, dept_id, sys_user_phone,
        sys_user_email, area_id,de.sys_dept_name,de.sys_dept_uuid FROM sys_user u
        LEFT JOIN sys_dept de ON u.id=de.id AND de.del_flag=0
        WHERE sys_user_uuid=#{sysUserUuid,jdbcType=VARCHAR} AND u.del_flag=0
    </select>

    <!--新增/编辑 用户名、邮箱唯一-->
    <select id="checkPhoneORemailUniqueness" resultType="int">
        SELECT /*MS-SYS-USER-CHECKPHONEOREMAILUNIQUENESS*/  COUNT(id) from sys_user
        <trim prefix="WHERE" prefixOverrides="AND || OR">
            <if test="email!=null">
                AND sys_user_email=#{email,jdbcType=VARCHAR}
            </if>
            <if test="phone!=null">
                AND sys_user_phone=#{phone,jdbcType=VARCHAR}
            </if>
            <if test="uuid!=null">
                AND  sys_user_uuid!=#{uuid,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <!--更新用户-->
    <update id="updateUser" >
        update /*MS-SYS-USER-UPDATEUSER*/ sys_user
        <set>
            <if test="sysUserName != null">
                sys_user_name = #{sysUserName,jdbcType=VARCHAR},
            </if>
            <if test="sysUserUuid != null">
                sys_user_uuid = #{sysUserUuid,jdbcType=VARCHAR},
            </if>
            <if test="sysUserPwd != null">
                sys_user_pwd = #{sysUserPwd,jdbcType=VARCHAR},
            </if>
            <if test="sysUserAuthSalt != null">
                sys_user_auth_salt = #{sysUserAuthSalt,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=BIGINT},
            </if>
            <if test="sysUserPhone != null">
                sys_user_phone = #{sysUserPhone,jdbcType=VARCHAR},
            </if>
            <if test="sysUserEmail != null">
                sys_user_email = #{sysUserEmail,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=BIGINT},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
        </set>
        where sys_user_uuid = #{sysUserUuid,jdbcType=VARCHAR}
    </update>

    <!--新增用户-->
    <insert id="insertUser" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="sysUserName != null">
                sys_user_name,
            </if>
            <if test="sysUserUuid != null">
                sys_user_uuid,
            </if>
            <if test="sysUserPwd != null">
                sys_user_pwd,
            </if>
            <if test="sysUserAuthSalt != null">
                sys_user_auth_salt,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="sysUserPhone != null">
                sys_user_phone,
            </if>
            <if test="sysUserEmail != null">
                sys_user_email,
            </if>
            <if test="areaId != null">
                area_id,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="sysUserName != null">
                #{sysUserName,jdbcType=VARCHAR},
            </if>
            <if test="sysUserUuid != null">
                #{sysUserUuid,jdbcType=VARCHAR},
            </if>
            <if test="sysUserPwd != null">
                #{sysUserPwd,jdbcType=VARCHAR},
            </if>
            <if test="sysUserAuthSalt != null">
                #{sysUserAuthSalt,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=BIGINT},
            </if>
            <if test="sysUserPhone != null">
                #{sysUserPhone,jdbcType=VARCHAR},
            </if>
            <if test="sysUserEmail != null">
                #{sysUserEmail,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=BIGINT},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--根据部门id集合查询用户列表-->
    <select id="getUserListByDeptIds" resultMap="BaseResultMap">
        SELECT /*MS-SYS-USER-GETUSERLISTBYDEPTIDS*/   id ,sys_user_name, sys_user_uuid, dept_id, sys_user_phone,
        sys_user_email, area_id FROM sys_user
        <trim prefix="where" prefixOverrides="and">
            and del_flag=0
            <if test="list!=null and list.size()!=0">
               and dept_id IN
                <foreach collection="list" item="deptIds" open="(" close=")" separator=",">
                    #{deptIds.deptId,jdbcType=BIGINT}
                </foreach>
            </if>
        </trim>
    </select>

    <!--测试用户手动输入排序-->
    <select id="testUserOrderByParams" resultMap="BaseResultMap">
        SELECT /*MS-SYS-USER-TESTUSERORDERBYPARAMS*/  <include refid="Base_Column_List" /> FROM sys_user
        <trim prefix="ORDER BY" prefixOverrides=",">
            <if test="one!=null">
                , ${one}
            </if>
            <if test="two!=null">
                , ${two}
            </if>
        </trim>
    </select>
</mapper>
