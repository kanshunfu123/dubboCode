<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaowei.sys.platform.core.common.dal.mapper.SysRoleDOMapper">
    <!-- 自动生成,请修改 SYS_ROLE.xml -->
    <resultMap id="BaseResultMap"  type="com.xiaowei.sys.platform.core.common.dal.dataobject.SysRoleDO">
        <id column="ID" property="id" jdbcType="BIGINT" javaType="Long"/>
        <result column="REMARK" property="remark" jdbcType="VARCHAR" javaType="String"/>
        <result column="DEL_FLAG" property="delFlag" jdbcType="CHAR" javaType="String"/>
        <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" javaType="String"/>
        <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_ROLE_NAME" property="sysRoleName" jdbcType="VARCHAR" javaType="String"/>
        <result column="SYS_ROLE_TYPE" property="sysRoleType" jdbcType="CHAR" javaType="String"/>
        <result column="SYS_ROLE_UUID" property="sysRoleUuid" jdbcType="VARCHAR" javaType="String"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
    </resultMap>


    <sql id="Base_SF_Column_List">
        sf.ID,sf.REMARK,sf.DEL_FLAG,sf.CREATE_BY,sf.UPDATE_BY
        ,sf.SYS_ROLE_NAME,sf.SYS_ROLE_TYPE,sf.SYS_ROLE_UUID,sf.CREATE_TIME,sf.UPDATE_TIME
    </sql>
    <sql id="Base_Column_List">
        ID,REMARK,DEL_FLAG,CREATE_BY,UPDATE_BY
        ,SYS_ROLE_NAME,SYS_ROLE_TYPE,SYS_ROLE_UUID,CREATE_TIME,UPDATE_TIME
    </sql>


    <!--插入表:sys_role-->
    <insert id="insert" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        <![CDATA[
        INSERT INTO sys_role(
            ID
            ,REMARK
            ,DEL_FLAG
            ,CREATE_BY
            ,UPDATE_BY
            ,SYS_ROLE_NAME
            ,SYS_ROLE_TYPE
            ,SYS_ROLE_UUID
            ,CREATE_TIME
            ,UPDATE_TIME
        )VALUES(
             null
            , #{remark,jdbcType=VARCHAR}
            , #{delFlag,jdbcType=CHAR}
            , #{createBy,jdbcType=VARCHAR}
            , #{updateBy,jdbcType=VARCHAR}
            , #{sysRoleName,jdbcType=VARCHAR}
            , #{sysRoleType,jdbcType=CHAR}
            , #{sysRoleUuid,jdbcType=VARCHAR}
            , #{createTime,jdbcType=TIMESTAMP}
            , #{updateTime,jdbcType=TIMESTAMP}
        )
        ]]>
    </insert>

    <!--批量插入表:sys_role-->
    <insert id="insertBatch" >
        INSERT INTO sys_role(
            ID
            ,REMARK
            ,DEL_FLAG
            ,CREATE_BY
            ,UPDATE_BY
            ,SYS_ROLE_NAME
            ,SYS_ROLE_TYPE
            ,SYS_ROLE_UUID
            ,CREATE_TIME
            ,UPDATE_TIME
        )VALUES
        <foreach collection="list" item="item" separator=",">
            (
                 null
                , #{item.remark,jdbcType=VARCHAR}
                , #{item.delFlag,jdbcType=CHAR}
                , #{item.createBy,jdbcType=VARCHAR}
                , #{item.updateBy,jdbcType=VARCHAR}
                , #{item.sysRoleName,jdbcType=VARCHAR}
                , #{item.sysRoleType,jdbcType=CHAR}
                , #{item.sysRoleUuid,jdbcType=VARCHAR}
                , #{item.createTime,jdbcType=TIMESTAMP}
                , #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <!--根据主键删除数据:SYS_ROLE-->
    <delete id="deleteById" >
        DELETE /*MS-SYS-ROLE-DELETEBYID*/ FROM sys_role
        WHERE
        ID = #{id,jdbcType=BIGINT}
    </delete>

    <!--根据主键获取数据:SYS_ROLE-->
    <select id="getById" resultMap="BaseResultMap">
            SELECT /*MS-SYS-ROLE-GETBYID*/  <include refid="Base_Column_List" /> FROM sys_role
            WHERE
                ID = #{id,jdbcType=BIGINT}
    </select>

    <!--根据uuid获取数据:SYS_ROLE-->
    <select id="getByUuid" resultMap="BaseResultMap">
        SELECT /*MS-SYS-ROLE-GETBYUUID*/  <include refid="Base_Column_List" /> FROM sys_role
        WHERE
        sys_role_uuid = #{sysRoleUuid,jdbcType=BIGINT}
        and del_flag=0
    </select>

    <!--根据用户的id查询角色信息-->
    <select id="getRoleByUserId" resultMap="BaseResultMap">
        SELECT /*MS-SYS-ROLE-GETROLEBYUSERID*/  sys_role_name,sys_role_uuid FROM sys_role WHERE id IN(
        SELECT /*MS-SYS-ROLE-GETROLEBYUSERID*/  role_id FROM sys_role_user roleUser WHERE user_id=#{uId,jdbcType=BIGINT} AND del_flag=0
        ) AND del_flag=0
    </select>

    <!--根据角色uuid查询角色列表id-->
    <select id="getRoleListByRoleUUID" resultMap="BaseResultMap">
        SELECT /*MS-SYS-ROLE-GETROLELISTBYROLEUUID*/  id FROM sys_role WHERE sys_role_uuid IN
        <foreach collection="list" open="(" close=")" item="uuids" separator=",">
            #{uuids,jdbcType=VARCHAR}
        </foreach>
        AND del_flag=0
    </select>

    <!--查询全部角色-->
    <select id="getAllRoleListByNoParam" resultMap="BaseResultMap">
    SELECT
    ID,SYS_ROLE_NAME,SYS_ROLE_TYPE,SYS_ROLE_UUID
    FROM sys_role
    WHERE del_flag=0
    </select>

    <!--修改用户角色-->
    <update id="updateRole" >
        update /*MS-SYS-ROLE-UPDATEROLE*/ sys_role
        <set>
            <if test="sysRoleUuid != null">
                sys_role_uuid = #{sysRoleUuid,jdbcType=VARCHAR},
            </if>
            <if test="sysRoleName != null">
                sys_role_name = #{sysRoleName,jdbcType=VARCHAR},
            </if>
            <if test="sysRoleType != null">
                sys_role_type = #{sysRoleType,jdbcType=CHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
        </set>
        where sys_role_uuid = #{sysRoleUuid,jdbcType=VARCHAR}
    </update>

    <!--根据角色名称查询角色信息-->
    <select id="findSysRoleByName" resultMap="BaseResultMap">
        select /*MS-SYS-ROLE-FINDSYSROLEBYNAME*/ <include refid="Base_Column_List" /> from sys_role
        where
        sys_role_name=#{sysRoleName,jdbcType=VARCHAR}
    </select>

    <!--修改时根据角色名称查询角色信息-->
    <select id="findSysRoleByNameAndUuid" resultMap="BaseResultMap">
        select /*MS-SYS-ROLE-FINDSYSROLEBYNAMEANDUUID*/ <include refid="Base_Column_List" /> from sys_role
        where
        sys_role_name=#{sysRoleName,jdbcType=VARCHAR}
        and sys_role_uuid!=#{sysRoleUuid,jdbcType=VARCHAR}
    </select>

    <!--角色列表分页 pageCount-->
    <select id="roleListPageCount"  resultType="int">
        SELECT
          COUNT(*) AS total 
        FROM
 sys_role
        <trim prefixOverrides="AND || OR" prefix="WHERE">
            <if test="delFlag!=null">
                AND del_flag=#{delFlag,jdbcType=CHAR}
            </if>
        </trim>
        
    </select>
    <!--角色列表分页 pageResult-->
    <select id="roleListPageResult"  resultMap="BaseResultMap">
        select /*MS-SYS-ROLE-ROLELISTPAGE*/ id,sys_role_uuid, sys_role_name, sys_role_type, remark
        from sys_role
        <trim prefixOverrides="AND || OR" prefix="WHERE">
            <if test="delFlag!=null">
                AND del_flag=#{delFlag,jdbcType=CHAR}
            </if>
        </trim>
        order by create_time desc
        limit #{startRow},#{limit}
    </select>

    <!--查询除自己之外是否还存在相同名称-->
    <select id="checkRoleName" resultType="int">
        select /*MS-SYS-ROLE-CHECKROLENAME*/ count(id)
        from sys_role
        where
        sys_role_name=#{sysRoleName,jdbcType=VARCHAR}
        and id!=#{id,jdbcType=BIGINT}
    </select>
</mapper>
